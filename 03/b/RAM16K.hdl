// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[0..1], 
      a=loadram0,
      b=loadram1,
      c=loadram2,
      d=loadram3
    );
    RAM4K(in=in, load=loadram0, address=address[2..13], out=ramout0);
    RAM4K(in=in, load=loadram1, address=address[2..13], out=ramout1);
    RAM4K(in=in, load=loadram2, address=address[2..13], out=ramout2);
    RAM4K(in=in, load=loadram3, address=address[2..13], out=ramout3);
    Mux4Way16(
      a=ramout0,
      b=ramout1,
      c=ramout2,
      d=ramout3,
      sel=address[0..1], out=out
    );
}
